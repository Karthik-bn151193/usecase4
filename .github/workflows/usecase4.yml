name: Terraform Workflow with Linting and Security Checks

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

permissions:
  id-token: write
  pull-requests: write

jobs:
  terraform:
    name: Terraform Actions with Linting and Security

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_IAM_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GithubActionsTerraform

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ">= 1.11.4"

      # TFlint Integration
      - name: Install TFlint
        run: |
          wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip # Replace with the latest TFlint version
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          tflint --version

      - name: Run TFlint
        id: tflint
        run: tflint --init && tflint -f compact
        working-directory: ./


      # Terraform Steps
      - name: Initialize Terraform
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
        working-directory: ./

      - name: Validate Terraform
        id: validate
        run: terraform validate
        working-directory: ./

      - name: Generate Terraform Plan
        id: plan
        run: terraform plan -no-color -lock=false > plan.txt
        working-directory: ./

      - name: Create Plan Output Markdown
        id: plan_report
        run: |
          mkdir -p docs
          echo "#Deployment Report" > docs/report.md
          echo "This file was generated during the github actions workflow run." >> docs/report.md
          echo "" >> docs/report.md
          echo "## Terraform Plan Output" >> docs/report.md
          echo '```' >> docs/report.md
          cat plan.txt >> docs/report.md
          echo '```' >> docs/report.md
        working-directory: ./
      
      - name: commit and push the report
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com
          git add docs/report.md
          git commit -m "Add deployment report"
          git push
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          working-directory: ./  

      - name: Comment Plan to Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan_report.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('./plan.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.event.pull_request.number,
              body: planOutput
            });

      - name: Apply Terraform
        id: apply
        run: terraform apply -auto-approve -lock=false
        working-directory: ./
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
